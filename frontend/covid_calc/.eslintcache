[{"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\index.js":"1","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\App.jsx":"2","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\reportWebVitals.js":"3","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\Input.jsx":"4","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\COVID_Age_View.jsx":"5","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\MultipleChoice.jsx":"6","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\SymptomPredictionModelView.jsx":"7","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\MasterView.jsx":"8","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\DropdownQuestion.jsx":"9","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\SymptomPredictionModel.jsx":"10","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\COVID_Age.jsx":"11","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\CommunityRisk.jsx":"12","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\Particles.jsx":"13"},{"size":563,"mtime":1612632692310,"results":"14","hashOfConfig":"15"},{"size":424,"mtime":1614141717498,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1612632692310,"results":"17","hashOfConfig":"15"},{"size":1070,"mtime":1614142950079,"results":"18","hashOfConfig":"15"},{"size":1287,"mtime":1614141717518,"results":"19","hashOfConfig":"15"},{"size":1387,"mtime":1612632692307,"results":"20","hashOfConfig":"15"},{"size":842,"mtime":1614141717607,"results":"21","hashOfConfig":"15"},{"size":4713,"mtime":1614143822595,"results":"22","hashOfConfig":"15"},{"size":1796,"mtime":1614141716477,"results":"23","hashOfConfig":"15"},{"size":3559,"mtime":1614142910377,"results":"24","hashOfConfig":"15"},{"size":3617,"mtime":1614143822606,"results":"25","hashOfConfig":"15"},{"size":3094,"mtime":1614141716479,"results":"26","hashOfConfig":"15"},{"size":2932,"mtime":1614141717633,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"16oyq1w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\index.js",[],["59","60"],"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\App.jsx",[],"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\reportWebVitals.js",[],"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\Input.jsx",[],"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\COVID_Age_View.jsx",["61"],"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\MultipleChoice.jsx",["62","63","64"],"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\SymptomPredictionModelView.jsx",["65"],"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\MasterView.jsx",[],"D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\DropdownQuestion.jsx",["66","67","68"],"import React, { Component } from 'react';\r\nimport {DropdownButton, Dropdown} from 'react-bootstrap';\r\nimport '../styles/Dropdown.css'\r\n\r\nclass DropdownQuestion extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.choices[0],\r\n            name : this.props.name,\r\n            isLoading: true,\r\n            tempChoices : this.props.choices\r\n        };\r\n    }\r\n\r\n    changeName(choice){\r\n        this.setState({value : choice})\r\n    }\r\n\r\n    change(event){\r\n        this.props.updateValue(this.state.name, event);\r\n    }\r\n\r\n    render(){\r\n\r\n        if(JSON.stringify(this.props.choices)!=JSON.stringify(this.state.tempChoices)){\r\n            this.state.value = this.props.choices[0]\r\n            this.state.tempChoices = this.props.choices\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {this.props.title}\r\n                <DropdownButton\r\n                                id=\"dropdown-basic-button\"\r\n                                title={this.state.value}\r\n                                onSelect={this.changeName.bind(this)}>\r\n                    <div className='dropdown-div'>\r\n                    {this.props.choices.map((choice, i)=>{\r\n                        return(\r\n                            <Dropdown.Item  key={i}\r\n                                            as=\"button\"\r\n                                            eventKey={choice}\r\n                                            onSelect={this.change.bind(this)}>\r\n                                {choice}\r\n                            </Dropdown.Item>\r\n                        )\r\n                    })}\r\n                    </div>\r\n\r\n                </DropdownButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropdownQuestion;\r\n","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\SymptomPredictionModel.jsx",["69","70"],"import React, { Component } from 'react';\r\nimport DropdownQuestion from './DropdownQuestion';\r\nimport Input from './Input';\r\n\r\n\r\nclass SymptomPredictionModel extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading : true,\r\n            questionList: false,\r\n            values: {},\r\n            covidRisk: 0.0\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/symptom_prediction_model_questions\")\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({questionList : data.questions});\r\n                let defaultValues = {}\r\n                data.questions.map((question) =>{\r\n                    defaultValues[question.name] = question.default;\r\n                })\r\n                this.setState({values : defaultValues})\r\n                return {}\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({isLoading : false})\r\n            }\r\n        )\r\n        .catch(console.log);\r\n    }\r\n\r\n\r\n    updateValue(key, value){\r\n        let tempValues = this.state.values;\r\n        tempValues[key] = value;\r\n        this.setState({values: tempValues})\r\n        this.calculate();\r\n    }\r\n\r\n    calculate(){\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.values)\r\n        }\r\n\r\n        fetch(\"http://localhost:5000/symptom_prediction_model_result\", requestOptions)\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({covidRisk : data.result})\r\n                this.props.updateCovidValue(this.state.covidRisk)\r\n            }\r\n        )\r\n        .catch(console.log)\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        if(this.state.isLoading === true){\r\n            return(\r\n                <h3>\r\n                    ... Loading ...\r\n                </h3>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    Individual COVID Risk Calculator\r\n                </h1>\r\n                {this.state.questionList.map(\r\n                    (question, i) => {\r\n                        if(question.question_type === 'dropdown'){\r\n                            return (\r\n                                <DropdownQuestion   key={i}\r\n                                                    updateValue={this.updateValue.bind(this)}\r\n                                                    title={question.title}\r\n                                                    choices={question.choices}\r\n                                                    name={question.name}/>\r\n                            )\r\n                        }\r\n                        if(question.question_type === 'input'){\r\n                            return (\r\n                                <Input              key={i}\r\n                                                    title={question.title}\r\n                                                    updateValue={this.updateValue.bind(this)}\r\n                                                    name={question.name}\r\n                                />\r\n                            )\r\n                        }\r\n                    }\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SymptomPredictionModel;\r\n","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\COVID_Age.jsx",["71","72","73","74","75","76","77","78"],"import React, { Component } from 'react';\r\nimport {DropdownButton, Dropdown, Tab, Tabs, Form, Container} from 'react-bootstrap';\r\nimport DropdownQuestion from './DropdownQuestion';\r\nimport Input from './Input';\r\n\r\n\r\nclass COVID_Age extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading : true,\r\n            questionList: false,\r\n            values: {},\r\n            covidRisk: {}\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/covid_age_model_questions\")\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                console.log(data);\r\n                this.setState({questionList : data.questions});\r\n                let defaultValues = {}\r\n                data.questions.map((question) =>{\r\n                    defaultValues[question.name] = question.default;\r\n\r\n                })\r\n                this.setState({values : defaultValues})\r\n                return {}\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({isLoading : false})\r\n            }\r\n        )\r\n        .catch(console.log);\r\n    }\r\n\r\n\r\n    updateValue(key, value){\r\n        let tempValues = this.state.values;\r\n        tempValues[key] = value;\r\n        this.setState({values: tempValues})\r\n        this.calculate();\r\n    }\r\n\r\n    calculate(){\r\n        var covidAgeParams = this.state.values\r\n\r\n        covidAgeParams['community_risk'] = this.props.communityRisk\r\n\r\n\r\n        console.log(covidAgeParams)\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(covidAgeParams)\r\n        }\r\n\r\n        fetch(\"http://localhost:5000/covid_age_result\", requestOptions)\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({covidRisk : data})\r\n\r\n                this.props.updateInfo(data)\r\n            }\r\n        )\r\n        .catch(console.log)\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        if(this.state.isLoading === true){\r\n            return(\r\n                <h3>\r\n                    ... Loading ...\r\n                </h3>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    COVID Age\r\n                </h2>\r\n                {this.state.questionList.map(\r\n                    (question, i) => {\r\n                        if(question.question_type === 'dropdown'){\r\n                            return (\r\n                                <DropdownQuestion   key={i}\r\n                                                    updateValue={this.updateValue.bind(this)}\r\n                                                    title={question.title}\r\n                                                    choices={question.choices}\r\n                                                    name={question.name}/>\r\n                            )\r\n                        }\r\n                        if(question.question_type === 'input'){\r\n                            return (\r\n                                <Input              key={i}\r\n                                                    title={question.title}\r\n                                                    updateValue={this.updateValue.bind(this)}\r\n                                                    name={question.name}/>\r\n                            )\r\n                        }\r\n                    }\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default COVID_Age;\r\n","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\CommunityRisk.jsx",["79","80","81","82","83","84","85"],"import React, { Component } from 'react';\r\nimport {DropdownButton, Dropdown, Tab, Tabs, Form, Container} from 'react-bootstrap';\r\nimport DropdownQuestion from './DropdownQuestion';\r\nimport Input from './Input';\r\n\r\n\r\nclass CommunityRisk extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading : true,\r\n            data : {},\r\n            currentState : \"Alabama\",\r\n            currentCounty : \"Autauga\",\r\n            communityRisk : 0.0\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/state_county_list\")\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (response) => {\r\n                this.setState({data : response})\r\n                return {}\r\n            }\r\n        )\r\n        .then(\r\n            (response) => {\r\n                this.setState({isLoading : false})\r\n            }\r\n        )\r\n        .catch(console.log);\r\n    }\r\n\r\n    updateState(key, value){\r\n        this.setState({currentState: value, currentCounty: this.state.data[value][0]})\r\n        this.props.updateCovidValue(0)\r\n    }\r\n\r\n    updateCounty(key, value){\r\n        this.setState({currentCounty : value})\r\n        this.calculate()\r\n    }\r\n\r\n    calculate(){\r\n        console.log(\"calculate\")\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\"state\" : this.state.currentState, \"county\" : this.state.currentCounty})\r\n        }\r\n        console.log(requestOptions.body)\r\n        fetch(\"http://localhost:5000/community_risk_result\", requestOptions)\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({communityRisk : data.result})\r\n                this.props.updateCovidValue(this.state.communityRisk)\r\n                console.log(\"Community risk: \" + this.state.communityRisk)\r\n            }\r\n        )\r\n        .catch(console.log)\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.isLoading === true){\r\n            return(\r\n                <h3>\r\n                    ... Loading ...\r\n                </h3>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <DropdownQuestion updateValue=  {this.updateState.bind(this)}\r\n                                        title=\"Choose your state.\"\r\n                                        choices={this.state.data[\"states\"]}\r\n                                        name=\"state\"/>\r\n                <DropdownQuestion updateValue=  {this.updateCounty.bind(this)}\r\n                                        title=\"Choose your county.\"\r\n                                        choices={this.state.data[this.state.currentState]}\r\n                                        name=\"county\"\r\n                                        start_value={this.state.data[this.state.currentState][0]}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CommunityRisk;\r\n","D:\\_Programming\\Python\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\Particles.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":35,"column":25,"nodeType":"92","endLine":35,"endColumn":107},{"ruleId":"93","severity":1,"message":"94","line":2,"column":14,"nodeType":"95","messageId":"96","endLine":2,"endColumn":17},{"ruleId":"93","severity":1,"message":"97","line":2,"column":19,"nodeType":"95","messageId":"96","endLine":2,"endColumn":22},{"ruleId":"93","severity":1,"message":"98","line":2,"column":24,"nodeType":"95","messageId":"96","endLine":2,"endColumn":28},{"ruleId":"99","severity":1,"message":"100","line":8,"column":5,"nodeType":"101","messageId":"102","endLine":10,"endColumn":6},{"ruleId":"103","severity":1,"message":"104","line":26,"column":46,"nodeType":"105","messageId":"106","endLine":26,"endColumn":48},{"ruleId":"107","severity":1,"message":"108","line":27,"column":13,"nodeType":"109","endLine":27,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":28,"column":13,"nodeType":"109","endLine":28,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":26,"column":47,"nodeType":"112","messageId":"113","endLine":26,"endColumn":49},{"ruleId":"110","severity":1,"message":"114","line":90,"column":35,"nodeType":"112","messageId":"115","endLine":90,"endColumn":37},{"ruleId":"93","severity":1,"message":"116","line":2,"column":9,"nodeType":"95","messageId":"96","endLine":2,"endColumn":23},{"ruleId":"93","severity":1,"message":"117","line":2,"column":25,"nodeType":"95","messageId":"96","endLine":2,"endColumn":33},{"ruleId":"93","severity":1,"message":"97","line":2,"column":35,"nodeType":"95","messageId":"96","endLine":2,"endColumn":38},{"ruleId":"93","severity":1,"message":"98","line":2,"column":40,"nodeType":"95","messageId":"96","endLine":2,"endColumn":44},{"ruleId":"93","severity":1,"message":"118","line":2,"column":46,"nodeType":"95","messageId":"96","endLine":2,"endColumn":50},{"ruleId":"93","severity":1,"message":"119","line":2,"column":52,"nodeType":"95","messageId":"96","endLine":2,"endColumn":61},{"ruleId":"110","severity":1,"message":"111","line":28,"column":47,"nodeType":"112","messageId":"113","endLine":28,"endColumn":49},{"ruleId":"110","severity":1,"message":"114","line":99,"column":35,"nodeType":"112","messageId":"115","endLine":99,"endColumn":37},{"ruleId":"93","severity":1,"message":"116","line":2,"column":9,"nodeType":"95","messageId":"96","endLine":2,"endColumn":23},{"ruleId":"93","severity":1,"message":"117","line":2,"column":25,"nodeType":"95","messageId":"96","endLine":2,"endColumn":33},{"ruleId":"93","severity":1,"message":"97","line":2,"column":35,"nodeType":"95","messageId":"96","endLine":2,"endColumn":38},{"ruleId":"93","severity":1,"message":"98","line":2,"column":40,"nodeType":"95","messageId":"96","endLine":2,"endColumn":44},{"ruleId":"93","severity":1,"message":"118","line":2,"column":46,"nodeType":"95","messageId":"96","endLine":2,"endColumn":50},{"ruleId":"93","severity":1,"message":"119","line":2,"column":52,"nodeType":"95","messageId":"96","endLine":2,"endColumn":61},{"ruleId":"93","severity":1,"message":"120","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":13},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react/jsx-pascal-case","Imported JSX component COVID_Age must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Tab' is defined but never used.","'Tabs' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]