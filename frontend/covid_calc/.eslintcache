[{"C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\index.js":"1","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\reportWebVitals.js":"2","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\App.jsx":"3","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\Particles.jsx":"4","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\MasterView.jsx":"5","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\COVID_Age_View.jsx":"6","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\SymptomPredictionModelView.jsx":"7","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\COVID_Age.jsx":"8","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\CommunityRisk.jsx":"9","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\SymptomPredictionModel.jsx":"10","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\Input.jsx":"11","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\DropdownQuestion.jsx":"12"},{"size":563,"mtime":1611534723116,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1611534723119,"results":"15","hashOfConfig":"14"},{"size":424,"mtime":1614144310497,"results":"16","hashOfConfig":"14"},{"size":2932,"mtime":1614144310672,"results":"17","hashOfConfig":"14"},{"size":4713,"mtime":1614144310602,"results":"18","hashOfConfig":"14"},{"size":1287,"mtime":1614144310558,"results":"19","hashOfConfig":"14"},{"size":842,"mtime":1614144310714,"results":"20","hashOfConfig":"14"},{"size":3617,"mtime":1614144310522,"results":"21","hashOfConfig":"14"},{"size":3094,"mtime":1614144310560,"results":"22","hashOfConfig":"14"},{"size":3559,"mtime":1614144310711,"results":"23","hashOfConfig":"14"},{"size":1070,"mtime":1614144310566,"results":"24","hashOfConfig":"14"},{"size":1796,"mtime":1614144310564,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"zgyuy5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\index.js",[],["58","59"],"C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\reportWebVitals.js",[],"C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\App.jsx",[],"C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\Particles.jsx",[],"C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\MasterView.jsx",[],"C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\COVID_Age_View.jsx",["60"],"import React, { Component } from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport COVID_Age from './COVID_Age';\r\nimport '../App.css'\r\n\r\n\r\nclass COVID_AGE_VIEW extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            death: 0.00,\r\n            hospitalization: 0.00,\r\n            deathColor : 'white',\r\n            hospitalizationColor : 'white',\r\n            icu : 0.00,\r\n            icuColor : 'white',\r\n            score : 0.00,\r\n            scoreColor : 'white'\r\n        };\r\n\r\n    }\r\n\r\n    updateInfo(info){\r\n        this.setState({ death : (info['probDeath'] * 100).toFixed(3),\r\n                        hospitalization: (info['probHosp']*100).toFixed(3),\r\n                        icu: (info['probICU']*100).toFixed(3),\r\n                        score: (info['riskScore']).toFixed(3)})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Container className=\"symptomPredView\">\r\n                <Row>\r\n                    <Col style={{margin: \"auto\", maxWidth : \"45vw\"}}>\r\n                        <COVID_Age updateInfo={this.props.info} communityRisk={this.props.communityRisk}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default COVID_AGE_VIEW;\r\n","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\SymptomPredictionModelView.jsx",["61"],"import React, { Component } from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport SymptomPredictionModel from './SymptomPredictionModel';\r\nimport CommunityRisk from './CommunityRisk';\r\nimport '../App.css'\r\n\r\nclass SymptomPredictionModelView extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Container className=\"symptomPredView\">\r\n                <Row>\r\n                    <Col style={{margin: \"auto\", maxWidth : \"75vw\"}}>\r\n                        <SymptomPredictionModel updateCovidValue={this.props.symptom}/>\r\n                        <CommunityRisk updateCovidValue={this.props.community}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SymptomPredictionModelView;\r\n","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\COVID_Age.jsx",["62","63"],"import React, { Component } from 'react';\r\nimport DropdownQuestion from './DropdownQuestion';\r\nimport Input from './Input';\r\n\r\n\r\nclass COVID_Age extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading : true,\r\n            questionList: false,\r\n            values: {},\r\n            covidRisk: {}\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/covid_age_model_questions\")\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                console.log(data);\r\n                this.setState({questionList : data.questions});\r\n                let defaultValues = {}\r\n                data.questions.map((question) =>{\r\n                    defaultValues[question.name] = question.default;\r\n\r\n                })\r\n                this.setState({values : defaultValues})\r\n                return {}\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({isLoading : false})\r\n            }\r\n        )\r\n        .catch(console.log);\r\n    }\r\n\r\n\r\n    updateValue(key, value){\r\n        let tempValues = this.state.values;\r\n        tempValues[key] = value;\r\n        this.setState({values: tempValues})\r\n        this.calculate();\r\n    }\r\n\r\n    calculate(){\r\n        var covidAgeParams = this.state.values\r\n\r\n        covidAgeParams['community_risk'] = this.props.communityRisk\r\n\r\n\r\n        console.log(covidAgeParams)\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(covidAgeParams)\r\n        }\r\n\r\n        fetch(\"http://localhost:5000/covid_age_result\", requestOptions)\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({covidRisk : data})\r\n\r\n                this.props.updateInfo(data)\r\n            }\r\n        )\r\n        .catch(console.log)\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        if(this.state.isLoading === true){\r\n            return(\r\n                <h3>\r\n                    ... Loading ...\r\n                </h3>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    COVID Age\r\n                </h2>\r\n                {this.state.questionList.map(\r\n                    (question, i) => {\r\n                        if(question.question_type === 'dropdown'){\r\n                            return (\r\n                                <DropdownQuestion   key={i}\r\n                                                    updateValue={this.updateValue.bind(this)}\r\n                                                    title={question.title}\r\n                                                    choices={question.choices}\r\n                                                    name={question.name}/>\r\n                            )\r\n                        }\r\n                        if(question.question_type === 'input'){\r\n                            return (\r\n                                <Input              key={i}\r\n                                                    title={question.title}\r\n                                                    updateValue={this.updateValue.bind(this)}\r\n                                                    name={question.name}/>\r\n                            )\r\n                        }\r\n                    }\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default COVID_Age;\r\n","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\CommunityRisk.jsx",["64","65","66","67","68","69","70"],"import React, { Component } from 'react';\r\nimport {DropdownButton, Dropdown, Tab, Tabs, Form, Container} from 'react-bootstrap';\r\nimport DropdownQuestion from './DropdownQuestion';\r\nimport Input from './Input';\r\n\r\n\r\nclass CommunityRisk extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading : true,\r\n            data : {},\r\n            currentState : \"Alabama\",\r\n            currentCounty : \"Autauga\",\r\n            communityRisk : 0.0\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/state_county_list\")\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (response) => {\r\n                this.setState({data : response})\r\n                return {}\r\n            }\r\n        )\r\n        .then(\r\n            (response) => {\r\n                this.setState({isLoading : false})\r\n            }\r\n        )\r\n        .catch(console.log);\r\n    }\r\n\r\n    updateState(key, value){\r\n        this.setState({currentState: value, currentCounty: this.state.data[value][0]})\r\n        this.props.updateCovidValue(0)\r\n    }\r\n\r\n    updateCounty(key, value){\r\n        this.setState({currentCounty : value})\r\n        this.calculate()\r\n    }\r\n\r\n    calculate(){\r\n        console.log(\"calculate\")\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\"state\" : this.state.currentState, \"county\" : this.state.currentCounty})\r\n        }\r\n        console.log(requestOptions.body)\r\n        fetch(\"http://localhost:5000/community_risk_result\", requestOptions)\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({communityRisk : data.result})\r\n                this.props.updateCovidValue(this.state.communityRisk)\r\n                console.log(\"Community risk: \" + this.state.communityRisk)\r\n            }\r\n        )\r\n        .catch(console.log)\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.isLoading === true){\r\n            return(\r\n                <h3>\r\n                    ... Loading ...\r\n                </h3>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <DropdownQuestion updateValue=  {this.updateState.bind(this)}\r\n                                        title=\"Choose your state.\"\r\n                                        choices={this.state.data[\"states\"]}\r\n                                        name=\"state\"/>\r\n                <DropdownQuestion updateValue=  {this.updateCounty.bind(this)}\r\n                                        title=\"Choose your county.\"\r\n                                        choices={this.state.data[this.state.currentState]}\r\n                                        name=\"county\"\r\n                                        start_value={this.state.data[this.state.currentState][0]}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CommunityRisk;\r\n","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\SymptomPredictionModel.jsx",["71","72"],"import React, { Component } from 'react';\r\nimport DropdownQuestion from './DropdownQuestion';\r\nimport Input from './Input';\r\n\r\n\r\nclass SymptomPredictionModel extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading : true,\r\n            questionList: false,\r\n            values: {},\r\n            covidRisk: 0.0\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/symptom_prediction_model_questions\")\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({questionList : data.questions});\r\n                let defaultValues = {}\r\n                data.questions.map((question) =>{\r\n                    defaultValues[question.name] = question.default;\r\n                })\r\n                this.setState({values : defaultValues})\r\n                return {}\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({isLoading : false})\r\n            }\r\n        )\r\n        .catch(console.log);\r\n    }\r\n\r\n\r\n    updateValue(key, value){\r\n        let tempValues = this.state.values;\r\n        tempValues[key] = value;\r\n        this.setState({values: tempValues})\r\n        this.calculate();\r\n    }\r\n\r\n    calculate(){\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.values)\r\n        }\r\n\r\n        fetch(\"http://localhost:5000/symptom_prediction_model_result\", requestOptions)\r\n        .then(\r\n            (response) => {\r\n                return response.json();\r\n            }\r\n        )\r\n        .then(\r\n            (data) => {\r\n                this.setState({covidRisk : data.result})\r\n                this.props.updateCovidValue(this.state.covidRisk)\r\n            }\r\n        )\r\n        .catch(console.log)\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        if(this.state.isLoading === true){\r\n            return(\r\n                <h3>\r\n                    ... Loading ...\r\n                </h3>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    Individual COVID Risk Calculator\r\n                </h1>\r\n                {this.state.questionList.map(\r\n                    (question, i) => {\r\n                        if(question.question_type === 'dropdown'){\r\n                            return (\r\n                                <DropdownQuestion   key={i}\r\n                                                    updateValue={this.updateValue.bind(this)}\r\n                                                    title={question.title}\r\n                                                    choices={question.choices}\r\n                                                    name={question.name}/>\r\n                            )\r\n                        }\r\n                        if(question.question_type === 'input'){\r\n                            return (\r\n                                <Input              key={i}\r\n                                                    title={question.title}\r\n                                                    updateValue={this.updateValue.bind(this)}\r\n                                                    name={question.name}\r\n                                />\r\n                            )\r\n                        }\r\n                    }\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SymptomPredictionModel;\r\n","C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\Input.jsx",[],"C:\\Users\\kevin\\Documents\\COVID-Individual-Risk-Calculator\\frontend\\covid_calc\\src\\components\\DropdownQuestion.jsx",["73","74","75"],"import React, { Component } from 'react';\r\nimport {DropdownButton, Dropdown} from 'react-bootstrap';\r\nimport '../styles/Dropdown.css'\r\n\r\nclass DropdownQuestion extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.choices[0],\r\n            name : this.props.name,\r\n            isLoading: true,\r\n            tempChoices : this.props.choices\r\n        };\r\n    }\r\n\r\n    changeName(choice){\r\n        this.setState({value : choice})\r\n    }\r\n\r\n    change(event){\r\n        this.props.updateValue(this.state.name, event);\r\n    }\r\n\r\n    render(){\r\n\r\n        if(JSON.stringify(this.props.choices)!=JSON.stringify(this.state.tempChoices)){\r\n            this.state.value = this.props.choices[0]\r\n            this.state.tempChoices = this.props.choices\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {this.props.title}\r\n                <DropdownButton\r\n                                id=\"dropdown-basic-button\"\r\n                                title={this.state.value}\r\n                                onSelect={this.changeName.bind(this)}>\r\n                    <div className='dropdown-div'>\r\n                    {this.props.choices.map((choice, i)=>{\r\n                        return(\r\n                            <Dropdown.Item  key={i}\r\n                                            as=\"button\"\r\n                                            eventKey={choice}\r\n                                            onSelect={this.change.bind(this)}>\r\n                                {choice}\r\n                            </Dropdown.Item>\r\n                        )\r\n                    })}\r\n                    </div>\r\n\r\n                </DropdownButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropdownQuestion;\r\n",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":35,"column":25,"nodeType":"84","endLine":35,"endColumn":107},{"ruleId":"85","severity":1,"message":"86","line":8,"column":5,"nodeType":"87","messageId":"88","endLine":10,"endColumn":6},{"ruleId":"89","severity":1,"message":"90","line":27,"column":47,"nodeType":"91","messageId":"92","endLine":27,"endColumn":49},{"ruleId":"89","severity":1,"message":"93","line":98,"column":35,"nodeType":"91","messageId":"94","endLine":98,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":23},{"ruleId":"95","severity":1,"message":"99","line":2,"column":25,"nodeType":"97","messageId":"98","endLine":2,"endColumn":33},{"ruleId":"95","severity":1,"message":"100","line":2,"column":35,"nodeType":"97","messageId":"98","endLine":2,"endColumn":38},{"ruleId":"95","severity":1,"message":"101","line":2,"column":40,"nodeType":"97","messageId":"98","endLine":2,"endColumn":44},{"ruleId":"95","severity":1,"message":"102","line":2,"column":46,"nodeType":"97","messageId":"98","endLine":2,"endColumn":50},{"ruleId":"95","severity":1,"message":"103","line":2,"column":52,"nodeType":"97","messageId":"98","endLine":2,"endColumn":61},{"ruleId":"95","severity":1,"message":"104","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":26,"column":47,"nodeType":"91","messageId":"92","endLine":26,"endColumn":49},{"ruleId":"89","severity":1,"message":"93","line":90,"column":35,"nodeType":"91","messageId":"94","endLine":90,"endColumn":37},{"ruleId":"105","severity":1,"message":"106","line":26,"column":46,"nodeType":"107","messageId":"108","endLine":26,"endColumn":48},{"ruleId":"109","severity":1,"message":"110","line":27,"column":13,"nodeType":"111","endLine":27,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":28,"column":13,"nodeType":"111","endLine":28,"endColumn":23},{"ruleId":"78","replacedBy":"112"},{"ruleId":"80","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"react/jsx-pascal-case","Imported JSX component COVID_Age must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-unused-vars","'DropdownButton' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","'Input' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["114"],["115"],"no-global-assign","no-unsafe-negation"]